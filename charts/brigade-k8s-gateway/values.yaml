rbac:
  ## Set this to true to enable Kubernetes RBAC support (recommended)
  enabled: false

## Image configuration
registry: brigadecore
name: brigade-k8s-gateway
tag: latest
pullPolicy: "IfNotPresent"

## What to watch
project: brigade-830c16d4aaf6f5490937ad719afd8490a5bcbef064d397411043ac

## Define the filters that you want to run.
## Filters are evaluated in order (top to bottom). Every filter must either
## 'accept' or 'reject' an event. The final rule is the default rule, and
## is typically merely of the form '- action: accept' or '- action: reject'
##
## The keys you can use in a filter are:
## - kind: (Pod or Node) - the Kubernetes kind. Events are only emitted for pod and node.
## - namespace: (Pod only) - the namespace to listen to
## - action: (reject, accept) - whether to accept or reject the event. If it is rejected, no Brigade build is started
## - reasons: (Killing, Starting, ...) - a list of reasons that you want to listen for.
##   Unfortunately, the precise list of reasons is not defined in Kubernetes.
##
## THESE ARE EXAMPLES.
## Our suggestion is that you ALWAYS set up Brigade in its own namespace, and
## then `reject` on any pod event in that namespace. Otherwise each time you
## trigger a build or job it will trigger another event, which will trigger another
## build, which will trigger another build, which will trigger another build....
filters:
## Ignore all events coming from kube-system
- namespace: kube-system
  action: reject
## Ignore events on Nodes. We just care about Pods
- kind: Node
  action: reject
## Ignore "Killing" messages for Pods
- kind: Pod
  reasons:
    - Killing
  action: reject
## ONLY Listen to events for Pods in this namespace
- kind: Pod
  namespace: pequod
  action: accept
## Reject anything else (don't DOS yourself)
- action: reject
