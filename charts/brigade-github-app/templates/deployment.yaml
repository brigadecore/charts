{{ $fullname :=  include "gateway.fullname" . }}
{{ $serviceAccount := default $fullname .Values.serviceAccount.name }}
apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels:
    app: {{ $fullname }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    role: gateway
    type: github-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $fullname }}
      role: gateway
      release: "{{ .Release.Name }}"
      type: github-app
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8}}
    {{- end }}
      labels:
        app: {{ $fullname }}
        role: gateway
        release: "{{ .Release.Name }}"
        type: github-app
    spec:
      serviceAccountName: {{ $serviceAccount }}
      {{ if .Values.github.affinity }}
      affinity:
{{ toYaml .Values.github.affinity | indent 8}}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.registry }}/{{ .Values.name }}:{{ default .Chart.AppVersion .Values.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.pullPolicy }}
        env:
          - name: BRIGADE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: BRIGADE_AUTHORS
            value: {{ if .Values.gateway.allowedAuthorRoles }}{{ join "," .Values.gateway.allowedAuthorRoles | quote }}{{ end }}
          - name: BRIGADE_EVENTS
            value: {{ if .Values.gateway.emittedEvents }}{{ join "," .Values.gateway.emittedEvents | quote }}{{ end }}
          - name: GATEWAY_CONFIG
            value: "/etc/brigade-github-app/key.pem"
          - name: APP_ID
            value: "{{ .Values.github.appID }}"
          - name: CHECK_SUITE_ON_PR
            value: "{{ .Values.github.checkSuiteOnPR }}"
          {{- if .Values.github.defaultSharedSecret }}
          - name: DEFAULT_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ $fullname }}
                key: defaultSharedSecret
          {{- end }}
        volumeMounts:
          - name: github-config
            mountPath: /etc/brigade-github-app
      volumes:
        - name: github-config
          secret:
            secretName: {{ $fullname }}
