{{- if .Values.ingress.enabled -}}
{{- $networkingApiIsStable := eq (include "networking.apiVersion.isStable" .) "true" -}}
{{- $networkingApiSupportsIngressClassName := eq (include "networking.apiVersion.supportIngressClassName" .) "true" -}}
{{- $serviceName := include "gateway.fullname" . -}}
{{- $servicePort := .Values.service.externalPort -}}
apiVersion: {{ template "networking.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ template "gateway.fullname" . }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  {{- if and (.Values.ingress.ingressClassName) ($networkingApiSupportsIngressClassName) }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  rules:
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          {{- if $networkingApiIsStable }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
          {{- else }}
          - path: /
            backend:
              serviceName: {{ $serviceName }}
              servicePort: {{ $servicePort }}
          {{- end }}
    {{- end -}}
  {{- if .Values.ingress.tls }}
  tls:
{{ toYaml .Values.ingress.tls | indent 4 }}
  {{- end -}}
{{- end -}}
